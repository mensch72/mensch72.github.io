{"version":3,"mappings":"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","names":["i0","ctx_r13","value","ctx_r18","ctx_r20","AddoptionDialogPage","constructor","formBuilder","popover","G","translate","ref","this","environment","option_name","type","message","option_desc","option_url","ngOnInit","ionViewWillEnter","p","parent","formGroup","group","addControl","FormControl","Validators","urlRegex","ready","ionViewDidEnter","setTimeout","focus_element","setFocus","OK_button_clicked","name","get","desc","url","o","Option","LocalNotifications","notifications","title","instant","body","id","then","res","catch","err","delegation_status","Del","update_my_delegation","pid","oid","oidsorted","push","sortingcounter","detectChanges","tally_all","dismiss","ClosePopover","selectors","routes","path","component","AddoptionDialogPageRoutingModule","RouterModule","AddoptionDialogPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","TranslateModule","ctx_r8","ctx_r10","ctx_r12","ctx_r14","ctx_r15","ctx_r16","DelegationDialogPage","delegate_nickname","from","can_use_web_share","navigator","share","can_share","Capacitor","S","email","did","request","private_key","agreement","prepare_delegation","message_title","due","D","format_date","update_request","delegate_nickname_changed","setp","from_changed","set_delegation_link","L","entry","mailto_url","encodeURIComponent","message_body","delegation_link","get_delegation_link","String","fromCharCode","repeat","share_button_clicked","Share","text","dialogTitle","info","after_request_was_sent","error","copy_button_clicked","window","clipboard","writeText","nickname","trace","warn","update_delegation_info","exit","email_button_clicked","ev","DelegationDialogPageRoutingModule","DelegationDialogPageModule","DraftpollKebapPage","JSON","examples","send4review","import","import_csv_dialog","use_example_clicked","get_example_docs","result","row","rows","doc","_id","includes","stringify","select_example","open","MouseEvent","use_example","spec","restart_with_data","IonSelect","ctx","DraftpollKebapPageRoutingModule","DraftpollKebapPageModule","ctx_r7","ctx_r17","ctx_r19","valid","ctx_r21","SelectServerComponent","Object","db_custom_server_url","db_custom_password","selectServerFormGroup","db","page","db_from_pid","showing_db_custom_password","page_object","onSelectServerReady","blur","set_db","c","set_db_from_pid","set_db_custom_server_url","set_db_custom_password","SharedcomponentsModule","registerPlugin","web","i","m","ShareWeb","createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","writeTask","classList","add","dispatchClick","remove","click","undefined","createGesture","gestureName","threshold","onStart","currentX","currentY","hapticSelectionStart","onMove","hapticSelectionChanged","onEnd","hapticSelectionEnd","attachComponent","delegate","container","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","assign","appendChild","Promise","resolve","componentOnReady","detachComponent","element","removeViewFromDom","parentElement","HapticEngine","getEngine","win","TapticEngine","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticImpact","sanitizeDOMString","untrustedString","isSanitizerEnabled","documentFragment","createDocumentFragment","workingDiv","innerHTML","blockedTags","blockedTag","getElementsToRemove","querySelectorAll","elementIndex","length","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","querySelector","console","nodeType","attributes","attribute","item","attributeName","allowedAttributes","toLowerCase","removeAttribute","attributeValue","children","childNodes","config","Ionic","sanitizerEnabled","SPINNERS","bubbles","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","top","sin","left","cos","step","circular","elmDuration","cx","cy","fill","viewBox","transform","crescent","dots","_","lines","y1","y2","hostContext","selector","closest","createColorClasses","color","cssClassMap","getClassMap","classes","map","getClassList","Array","isArray","split","filter","trim","SCHEME","openURL","direction","animation","test","router","preventDefault"],"sources":["./src/app/addoption-dialog/addoption-dialog.page.html","./src/app/addoption-dialog/addoption-dialog.page.ts","./src/app/addoption-dialog/addoption-dialog-routing.module.ts","./src/app/addoption-dialog/addoption-dialog.module.ts","./src/app/delegation-dialog/delegation-dialog.page.html","./src/app/delegation-dialog/delegation-dialog.page.ts","./src/app/delegation-dialog/delegation-dialog-routing.module.ts","./src/app/delegation-dialog/delegation-dialog.module.ts","./src/app/draftpoll-kebap/draftpoll-kebap.page.html","./src/app/draftpoll-kebap/draftpoll-kebap.page.ts","./src/app/draftpoll-kebap/draftpoll-kebap-routing.module.ts","./src/app/draftpoll-kebap/draftpoll-kebap.module.ts","./src/app/sharedcomponents/select-server/select-server.component.html","./src/app/sharedcomponents/select-server/select-server.component.ts","./src/app/sharedcomponents/sharedcomponents.module.ts","./node_modules/@capacitor/share/dist/esm/index.js","./node_modules/@ionic/core/dist/esm/button-active-d4bd4f74.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/index-9e3fe806.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js"],"sourcesContent":["<!--\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<ion-content *ngIf=\"ready\">\n  <form [formGroup]=\"formGroup\">\n    <ion-list lines=\"full\">\n\n      <ion-item lines=\"none\">\n        <ion-col class=\"ion-no-padding ion-no-margin\">\n          <h1 [innerHtml]=\"'addoption.header'|translate\"></h1> \n          <p [innerHtml]=\"'addoption.intro'|translate\"></p> \n          <small *ngIf=\"(!!p.language) && (p.language != G.S.language)\">\n            <p [innerHtml]=\"'addoption.different-language' | translate: {language: G.S.language_names[p.language]}\"></p>\n          </small>\n          </ion-col>      \n      </ion-item>\n\n      <!-- NAME: -->\n\n      <ion-item>\n        <ion-label position=\"floating\" color=\"primary\">\n          <span [innerHtml]=\"\n              (p.type=='winner' \n              ? 'draftpoll.option-name-label' \n              : 'draftpoll.target-name-label') | translate\">\n          </span>\n        </ion-label>\n        <ion-input \n          formControlName=\"option_name\" \n          autofocus=\"true\" #focus_element\n          [placeholder]=\"(p.type == 'winner' \n                          ? 'draftpoll.option-name-placeholder' \n                          : 'draftpoll.target-name-placeholder') | translate\"\n          type=\"text\" required [maxlength]=\"E.max_len.name\" \n          style=\"font-weight: bold; font-style: italic;\">\n        </ion-input>      \n      </ion-item>\n      <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of validation_messages.option_name\">\n          <div class=\"error-message\" \n              *ngIf=\"formGroup.get('option_name').hasError(validation.type) \n                      && (formGroup.get('option_name').dirty || formGroup.get('option_name').touched)\"\n              [innerHtml]=\"validation.message|translate\">\n          </div>\n        </ng-container>\n      </div>\n\n      <!-- DESCRIPTION: -->\n\n      <ion-item>\n        <ion-label position=\"floating\" color=\"primary\">\n          <span [innerHtml]=\"'draftpoll.option-desc-label'|translate\">\n          </span>\n        </ion-label>\n        <ion-textarea \n          formControlName=\"option_desc\" [maxlength]=\"E.max_len.desc\"\n          [placeholder]=\"'draftpoll.option-desc-placeholder'|translate:{name:formGroup.get('option_name').value}\"\n          rows=\"1\" auto-grow type=\"text\" \n          style=\"font-style: italic;\">\n        </ion-textarea>\n      </ion-item>\n      <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of validation_messages.option_desc\">\n          <div class=\"error-message\" \n              *ngIf=\"formGroup.get('option_desc').hasError(validation.type) \n                      && (formGroup.get('option_desc').dirty || formGroup.get('option_desc').touched)\"\n            [innerHtml]=\"validation.message|translate\">\n          </div>\n        </ng-container>\n      </div>\n\n      <!-- READ-MORE LINK (URL): -->\n\n      <ion-item>\n        <ion-label position=\"floating\" color=\"primary\">\n          <span [innerHtml]=\"'draftpoll.option-url-label'|translate\">\n          </span>\n        </ion-label>\n        <ion-input \n          formControlName=\"option_url\" \n          [placeholder]=\"'draftpoll.option-url-placeholder'|translate:{name:formGroup.get('option_name').value}\"\n          type=\"text\" inputmode=\"url\" [maxlength]=\"E.max_len.url\"\n          style=\"font-size: smaller;\">\n        </ion-input>\n        <ion-button \n            *ngIf=\"formGroup.get('option_url').valid && ![null,''].includes(formGroup.get('option_url').value)\" \n            fill=\"clear\" slot=\"end\" class=\"skip-button\" tabindex=\"-1\" \n            (click)=\"G.open_url_in_new_tab(formGroup.get('option_url').value)\">\n          <span [innerHtml]=\"'test'|translate\"></span>&nbsp;\n          <ion-icon name=\"open-outline\"></ion-icon>\n        </ion-button>\n      </ion-item>\n      <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of validation_messages.option_url\">\n          <div class=\"error-message\" \n              *ngIf=\"formGroup.get('option_url').hasError(validation.type) \n                      && (formGroup.get('option_url').dirty || formGroup.get('option_url').touched)\"\n            [innerHtml]=\"validation.message|translate\">\n          </div>\n        </ng-container>\n      </div>\n\n      <!-- BUTTONS: -->\n\n      <ion-item lines=\"none\" class=\"ion-text-right\">\n        <ion-buttons slot=\"end\">\n          <ion-button shape=\"round\"\n              (click)=\"ClosePopover()\">\n            <ion-icon name=\"arrow-back-outline\"></ion-icon>&nbsp;\n            <span [innerHtml]=\"'cancel'|translate\"></span>\n          </ion-button>&nbsp;&nbsp;\n          <ion-button color=\"primary\"\n              shape=\"round\" fill=\"solid\"\n              (click)=\"OK_button_clicked()\"><!--type=\"submit\" button-type=\"submit\"-->\n            <ion-icon name=\"checkmark\"></ion-icon>&nbsp;\n            <span [innerHtml]=\"'add'|translate\"></span>\n          </ion-button>\n        </ion-buttons>\n      </ion-item>\n      <ion-item lines=\"none\">\n        <small [innerHtml]=\"'addoption.info' | translate\"></small>\n      </ion-item>\n\n    </ion-list>\n  </form>\n</ion-content>\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit, Input, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl, ValidationErrors, AbstractControl } from '@angular/forms';\nimport { IonInput, PopoverController } from '@ionic/angular';\nimport { LocalNotifications } from '@capacitor/local-notifications';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Capacitor } from '@capacitor/core';\n//import { Share } from '@capacitor/share';\n//import { LocalNotifications } from '@capacitor/local-notifications';\n\nimport { environment } from '../../environments/environment';\nimport { GlobalService } from \"../global.service\";\nimport { PollPage } from '../poll/poll.module';  \nimport { Poll, Option } from '../poll.service';\n\n@Component({\n  selector: 'app-addoption-dialog',\n  templateUrl: './addoption-dialog.page.html',\n  styleUrls: ['./addoption-dialog.page.scss'],\n})\nexport class AddoptionDialogPage implements OnInit {\n\n  E = environment;\n  \n  @Input() parent: PollPage;\n\n  ready = false;\n\n//  can_use_web_share: boolean;\n//  can_share: boolean;\n\n  formGroup: FormGroup;\n\n  p: Poll;\n  poll_link: string;\n  message_title: string;\n  message_body: string;\n  mailto_url: string;\n\n  constructor(\n    public formBuilder: FormBuilder, \n    private popover: PopoverController,\n    public G: GlobalService,\n    public translate: TranslateService,\n    private ref: ChangeDetectorRef\n  ) { \n  }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n//    this.can_use_web_share = (typeof navigator.share === \"function\");\n//    this.can_share = Capacitor.isNativePlatform() || this.can_use_web_share;\n\n    this.p = this.parent.p;\n\n    this.formGroup = this.formBuilder.group({});\n    this.formGroup.addControl('option_name', new FormControl(\"\", Validators.required));\n    this.formGroup.addControl('option_desc', new FormControl(\"\"));\n    this.formGroup.addControl('option_url', new FormControl(\"\", Validators.pattern(this.G.urlRegex)));\n\n    this.ready = true;\n  }\n\n  @ViewChild('focus_element', { static: false }) focus_element: IonInput;\n\n  ionViewDidEnter() {\n    setTimeout(() => this.focus_element.setFocus(), 100);\n  }\n\n  OK_button_clicked() {\n    /** add the option */\n    const name = this.formGroup.get('option_name').value,\n          desc = this.formGroup.get('option_desc').value,\n          url = this.formGroup.get('option_url').value,\n          o = new Option(this.G, this.p, null, name, desc, url);\n    LocalNotifications.schedule({\n      notifications: [{\n        title: this.translate.instant(\"addoption.notification-added-title\"),\n        body: name,\n        id: 0\n      }]\n    })\n    .then(res => {\n    }).catch(err => {\n    });\n    if (this.parent.delegation_status == 'agreed') {\n      this.G.Del.update_my_delegation(this.p.pid, o.oid, true);\n    }\n    this.parent.oidsorted.push(o.oid);\n    this.parent.sortingcounter++;\n    this.ref.detectChanges();\n    // need to wait a little for the view to refresh:\n    setTimeout(() => {\n      this.p.tally_all();\n      this.popover.dismiss();\n    }, 200);\n  }\n\n  ClosePopover()\n  {\n    this.popover.dismiss();\n  }\n\n  validation_messages = {\n    'option_name': [\n      { type: 'required', message: 'validation.option-name-required' },\n    ],\n    'option_desc': [\n    ],\n    'option_url': [\n      { type: 'pattern', message: 'validation.option-url-valid' },\n    ]\n  }\n\n  // SHARING OPTIONS, NOT YET ACTIVE:\n/*\n  compose_message() {\n    this.poll_link = environment.magic_link_base_url + \"poll/\" + this.p.pid;\n    this.message_body = (this.translate.instant('delegation-request.message-body-greeting') + \"\\n\\n\" \n                + this.translate.instant('delegation-request.message-body-before-title') + \"\\n\\n\"\n                + String.fromCharCode(160).repeat(4) + this.p.title + \".\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-closes', {due: this.G.D.format_date(this.p.due)}) + \"\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-explanation') + \"\\n\\n\" \n                + this.translate.instant('delegation-request.message-body-before-link') + \"\\n\\n\" \n                + this.translate.instant('delegation-request.message-body-dont-share') + \"\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-regards'));\n  }\n\n  share_button_clicked() {\n    this.G.L.entry(\"AddoptionDialogPage.share_button_clicked\");\n    this.compose_message();\n    Share.share({\n      title: this.message_title,\n      text: this.message_body,\n//      url: this.poll_link,\n      dialogTitle: 'Share vodle delegation link',\n    }).then(res => {\n      this.G.L.info(\"AddoptionDialogPage.share_button_clicked succeeded\", res);\n      this.popover.dismiss();\n    }).catch(err => {\n      this.G.L.error(\"AddoptionDialogPage.share_button_clicked failed\", err);\n    });\n  }\n\n  copy_button_clicked() {\n    this.G.L.entry(\"AddoptionDialogPage.copy_button_clicked\");\n    this.compose_message();\n    window.navigator.clipboard.writeText(this.poll_link);\n    LocalNotifications.schedule({\n      notifications: [{\n        title: this.translate.instant(\"delegation-request.notification-copied-link-title\"),\n        body: this.translate.instant(\"delegation-request.notification-copied-link-body\", \n                                     {nickname: this.formGroup.get('delegate_nickname').value}),\n        id: null\n      }]\n    })\n    .then(res => {\n      this.G.L.trace(\"AddoptionDialogPage.copy_button_clicked localNotifications.schedule succeeded:\", res);\n    }).catch(err => {\n      this.G.L.warn(\"AddoptionDialogPage.copy_button_clicked localNotifications.schedule failed:\", err);\n    });\n    this.popover.dismiss();\n    this.G.L.exit(\"AddoptionDialogPage.copy_button_clicked\");\n  }\n\n  email_button_clicked(ev: MouseEvent) {\n    this.G.L.entry(\"AddoptionDialogPage.email_button_clicked\");\n    this.compose_message();\n    this.popover.dismiss();\n    this.G.L.exit(\"AddoptionDialogPage.email_button_clicked\");\n  }\n*/\n\n}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddoptionDialogPage } from './addoption-dialog.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddoptionDialogPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddoptionDialogPageRoutingModule {}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddoptionDialogPageRoutingModule } from './addoption-dialog-routing.module';\n\nimport { AddoptionDialogPage } from './addoption-dialog.page';\nexport { AddoptionDialogPage } from './addoption-dialog.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AddoptionDialogPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [AddoptionDialogPage],\n  exports: [AddoptionDialogPage]\n})\nexport class AddoptionDialogPageModule {}\n","<!--\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<ion-content *ngIf=\"ready\">\n  <form [formGroup]=\"formGroup\">\n    <ion-list lines=\"full\">\n      <ion-item lines=\"none\">\n        <ion-col class=\"ion-no-padding ion-no-margin\">\n          <h1 [innerHtml]=\"'delegation-request.header'|translate\"></h1> \n          <p [innerHtml]=\"'delegation-request.intro'|translate\"></p> \n        </ion-col>      \n      </ion-item>\n      <ion-item>\n        <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'delegation-request.nickname-label'|translate\"></ion-label>\n        <ion-input \n          formControlName=\"delegate_nickname\" \n          autofocus=\"true\" #focus_element\n          [placeholder]=\"'delegation-request.nickname-placeholder'|translate\"\n          (ionChange)=\"delegate_nickname_changed()\" debounce=\"100\"\n          (ionBlur)=\"delegate_nickname_changed()\"\n          type=\"text\" [maxlength]=\"E.max_len.name\">\n        </ion-input>\n      </ion-item>\n      <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of validation_messages.delegate_nickname\">\n          <div class=\"error-message\" \n              *ngIf=\"formGroup.get('delegate_nickname').hasError(validation.type) \n                      && (formGroup.get('delegate_nickname').dirty || formGroup.get('delegate_nickname').touched)\"\n              [innerHtml]=\"validation.message|translate\">\n          </div>\n        </ng-container>\n      </div>\n      <ion-item>\n        <small>\n          <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'delegation-request.from-label'|translate\"></ion-label>\n          <ion-input \n            formControlName=\"from\" \n            [placeholder]=\"'delegation-request.from-placeholder'|translate\"\n            (ionChange)=\"from_changed()\" debounce=\"100\"\n            (ionBlur)=\"from_changed()\"\n            type=\"text\" [maxlength]=\"E.max_len.name\">\n          </ion-input>\n        </small>\n      </ion-item>\n      <ng-container *ngIf=\"can_share\">\n        <ion-item lines=\"none\">\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n            <small><p [innerHtml]=\"'delegation-request.request-options-with-share'|translate\"></p></small> \n          </ion-col>      \n        </ion-item>\n        <ion-item lines=\"none\" class=\"ion-text-end\" text-wrap>\n          <ion-button color=\"primary\" slot=\"end\" [disabled]=\"!formGroup.valid\"\n              shape=\"round\"\n              (click)=\"share_button_clicked()\">\n            <span [innerHtml]=\"'inviteto.share'|translate\"></span>&nbsp;\n            <ion-icon name=\"share-social-outline\"></ion-icon> <!--TODO: use correct share icon-->\n          </ion-button>\n        </ion-item>\n      </ng-container>\n      <ng-container *ngIf=\"!can_share\">\n        <ion-item lines=\"none\">\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n            <small><p [innerHtml]=\"'delegation-request.request-options-without-share'|translate\"></p></small> \n          </ion-col>      \n        </ion-item>\n      </ng-container>\n      <ion-item \n          lines=\"none\" class=\"ion-text-end\" text-wrap>\n        <ion-button color=\"primary\" slot=\"end\" [disabled]=\"!formGroup.valid\"\n              shape=\"round\" (click)=\"email_button_clicked($event)\">\n          <a [href]=\"mailto_url\" target=\"_top\" style=\"color:inherit;text-decoration:inherit\">\n            <span [innerHtml]=\"'delegation-request.compose-email'|translate\"></span>&nbsp;\n            <ion-icon name=\"mail-open-outline\"></ion-icon> <!--TODO: make icon show in correct size and alignment-->\n          </a>\n        </ion-button>\n      </ion-item>\n      <ion-item \n          lines=\"none\" class=\"ion-text-end\" text-wrap>\n        <ion-button color=\"primary\" slot=\"end\" [disabled]=\"!formGroup.valid\"\n            shape=\"round\"\n            (click)=\"copy_button_clicked()\">\n          <span [innerHtml]=\"'delegation-request.copy-link'|translate\"></span>&nbsp;\n          <ion-icon name=\"copy-outline\"></ion-icon> <!--TODO: use correct clipboard icon-->\n        </ion-button>\n      </ion-item>\n    </ion-list>\n  </form>\n</ion-content>\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl, ValidationErrors, AbstractControl } from '@angular/forms';\nimport { IonInput, PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Capacitor } from '@capacitor/core';\nimport { Share } from '@capacitor/share';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\nimport { GlobalService } from \"../global.service\";\nimport { PollPage } from '../poll/poll.module';  \nimport { Poll } from '../poll.service';\nimport { del_agreement_t, del_request_t } from '../data.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-delegation-dialog',\n  templateUrl: './delegation-dialog.page.html',\n  styleUrls: ['./delegation-dialog.page.scss'],\n})\nexport class DelegationDialogPage implements OnInit {\n\n  E = environment;\n  \n  @Input() parent: PollPage;\n\n  ready = false;\n\n  can_use_web_share: boolean;\n  can_share: boolean;\n\n  formGroup: FormGroup;\n\n  p: Poll;\n  did: string;\n  request: del_request_t;\n  private_key: string;\n  agreement: del_agreement_t;\n  delegation_link: string;\n  message_title: string;\n  message_body: string;\n  mailto_url: string;\n\n  constructor(\n    private popover: PopoverController,\n    public formBuilder: FormBuilder, \n    public translate: TranslateService,\n    public G: GlobalService) { \n  }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.can_use_web_share = (typeof navigator.share === \"function\");\n    this.can_share = Capacitor.isNativePlatform() || this.can_use_web_share;\n    this.formGroup = this.formBuilder.group({\n      delegate_nickname: new FormControl('', Validators.required),\n      from: new FormControl(this.G.S.email)\n    });\n    // TODO: what if already some delegation active or pending?\n    // prepare a new delegation:\n    [this.p, this.did, this.request, this.private_key, this.agreement] = this.G.Del.prepare_delegation(this.parent.pid);\n    // TODO: make indentation in body work:\n    this.message_title = this.translate.instant('delegation-request.message-subject', {due: this.G.D.format_date(this.p.due)});\n    this.update_request();\n    this.ready = true;\n  }\n\n  @ViewChild('focus_element', { static: false }) focus_element: IonInput;\n\n  ionViewDidEnter() {\n    setTimeout(() => this.focus_element.setFocus(), 100);\n  }\n\n  delegate_nickname_changed() {\n    const delegate_nickname = this.formGroup.get('delegate_nickname').value;\n    this.G.D.setp(this.p.pid, \"del_nickname.\" + this.did, delegate_nickname);\n    this.update_request();\n  }\n\n  from_changed() {\n    const from = this.formGroup.get('from').value;\n    this.G.D.setp(this.p.pid, \"del_from.\" + this.did, from);\n    this.set_delegation_link(from);\n    this.update_request();\n  }\n\n  update_request() {\n    this.G.L.entry(\"DelegationDialogPage.update_request\");\n    this.mailto_url = \"mailto:\" + encodeURIComponent(this.formGroup.get('delegate_nickname').value) + \"?subject=\" + encodeURIComponent(this.message_title) + \"&body=\" + encodeURIComponent(this.message_body); \n  }\n\n  ClosePopover()\n  {\n    this.popover.dismiss();\n  }\n\n  validation_messages = {\n    'delegate_nickname': [\n      { type: 'required', message: 'validation.delegate-nickname-required' },\n    ],\n    'from': []\n  }\n\n  set_delegation_link(from: string) {\n    this.delegation_link = this.G.Del.get_delegation_link(this.parent.pid, this.did, from, this.private_key);\n    this.message_body = (this.translate.instant('delegation-request.message-body-greeting') + \"\\n\\n\" \n                + this.translate.instant('delegation-request.message-body-before-title') + \"\\n\\n\"\n                + String.fromCharCode(160).repeat(4) + this.p.title + \".\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-closes', {due: this.G.D.format_date(this.p.due)}) + \"\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-explanation') + \"\\n\\n\" \n                + this.translate.instant('delegation-request.message-body-before-link') + \"\\n\\n\" \n                + String.fromCharCode(160).repeat(4) + this.delegation_link + \"\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-dont-share') + \"\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-regards'));\n  }\n\n  share_button_clicked() {\n    this.G.L.entry(\"DelegationDialogPage.share_button_clicked\");\n    this.delegate_nickname_changed();\n    this.from_changed();\n    Share.share({\n      title: this.message_title,\n      text: this.message_body,\n//      url: this.delegation_link, // not added since contained in body, otherwise will appear twice...\n      dialogTitle: 'Share vodle delegation link',\n    }).then(res => {\n      this.G.L.info(\"DelegationDialogPage.share_button_clicked succeeded\", res);\n      this.G.Del.after_request_was_sent(this.parent.pid, this.did, this.request, this.private_key, this.agreement);\n      this.popover.dismiss();\n    }).catch(err => {\n      this.G.L.error(\"DelegationDialogPage.share_button_clicked failed\", err);\n    });\n  }\n\n  copy_button_clicked() {\n    this.G.L.entry(\"DelegationDialogPage.copy_button_clicked\");\n    this.delegate_nickname_changed();\n    this.from_changed();\n    window.navigator.clipboard.writeText(this.delegation_link);\n    this.G.Del.after_request_was_sent(this.parent.pid, this.did, this.request, this.private_key, this.agreement);\n    LocalNotifications.schedule({\n      notifications: [{\n        title: this.translate.instant(\"delegation-request.notification-copied-link-title\"),\n        body: this.translate.instant(\"delegation-request.notification-copied-link-body\", \n                                     {nickname: this.formGroup.get('delegate_nickname').value}),\n        id: null\n      }]\n    })\n    .then(res => {\n      this.G.L.trace(\"DelegationDialogPage.copy_button_clicked localNotifications.schedule succeeded:\", res);\n    }).catch(err => {\n      this.G.L.warn(\"DelegationDialogPage.copy_button_clicked localNotifications.schedule failed:\", err);\n    });\n    this.parent.update_delegation_info();\n    this.popover.dismiss();\n    this.G.L.exit(\"DelegationDialogPage.copy_button_clicked\");\n  }\n\n  email_button_clicked(ev: MouseEvent) {\n    this.G.L.entry(\"DelegationDialogPage.email_button_clicked\");\n    this.delegate_nickname_changed();\n    this.from_changed();\n    this.G.Del.after_request_was_sent(this.parent.pid, this.did, this.request, this.private_key, this.agreement);\n    this.parent.update_delegation_info();\n    this.popover.dismiss();\n    this.G.L.exit(\"DelegationDialogPage.email_button_clicked\");\n  }\n}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DelegationDialogPage } from './delegation-dialog.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DelegationDialogPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DelegationDialogPageRoutingModule {}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DelegationDialogPageRoutingModule } from './delegation-dialog-routing.module';\n\nimport { DelegationDialogPage } from './delegation-dialog.page';\nexport { DelegationDialogPage } from './delegation-dialog.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    DelegationDialogPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [DelegationDialogPage],\n  exports: [DelegationDialogPage]\n})\nexport class DelegationDialogPageModule {}\n","<!--\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<ion-content>\n  <ion-item (click)=\"send4review()\">\n    <ion-button fill=\"clear\" color=\"dark\">\n      <ion-icon name=\"share-social\"></ion-icon>&nbsp;&nbsp;<span [innerHtml]=\"'draftpoll.send-for-review'|translate\"></span>\n    </ion-button>\n  </ion-item>\n  <ion-item (click)=\"import()\">\n    <ion-button fill=\"clear\" color=\"dark\">\n      <ion-icon name=\"folder-open-outline\"></ion-icon>&nbsp;&nbsp;<span [innerHtml]=\"'draftpoll.import-options-from-file'|translate\"></span>\n    </ion-button>\n  </ion-item>\n  <ion-item (click)=\"use_example_clicked()\">\n    <ion-button fill=\"clear\" color=\"dark\">\n      <ion-icon name=\"cloud-download-outline\"></ion-icon>&nbsp;&nbsp;\n      <span [innerHtml]=\"'draftpoll.use-example-from-db'|translate\"></span>\n    </ion-button>\n    <!--the actual select item is hidden so that the appearance is that of a button:-->\n    <ion-select #ionSelects #select_example interface=\"popover\" \n        (ionChange)=\"use_example()\" display=\"none\"\n        [cancelText]=\"'cancel'|translate\" [okText]=\"'OK'|translate\" \n        style=\"font-size: smaller\">\n      <ion-select-option value=\"-\" [innerHtml]=\"'draftpoll.use-example-from-db-none'|translate\"></ion-select-option>\n      <ion-select-option *ngFor=\"let doc of examples\" [value]=\"doc\" [innerHtml]=\"JSON.parse(doc)['title']\"></ion-select-option>\n    </ion-select>\n  </ion-item>\n</ion-content> \n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit, Input, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { PopoverController, IonSelect } from '@ionic/angular';\nimport { DraftpollPage } from '../draftpoll/draftpoll.module';  \n\n@Component({\n  selector: 'app-draftpoll-kebap',\n  templateUrl: './draftpoll-kebap.page.html',\n  styleUrls: ['./draftpoll-kebap.page.scss'],\n})\nexport class DraftpollKebapPage implements OnInit {\n\n  @Input() parent: DraftpollPage;\n\n  @ViewChild(IonSelect, { static: false }) select_example: IonSelect;\n\n  examples: string[];\n\n  JSON = JSON;\n\n  constructor(\n    private popover: PopoverController,\n    private ref: ChangeDetectorRef\n  ) { \n    this.examples = [];\n  }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n  }\n\n  ClosePopover()\n  {\n    this.popover.dismiss();\n  }\n\n  send4review() { \n    this.parent.send4review(); \n    this.popover.dismiss();\n  }\n\n  import() { \n    this.parent.import_csv_dialog(); \n    this.popover.dismiss();\n  }\n\n  use_example_clicked() {\n    this.parent.G.D.get_example_docs().then(result => {\n      this.examples = [];\n      for (let row of result.rows) {\n        let doc = row.doc;\n        if (!doc._id.includes(\"§§\")) {\n          this.examples.push(JSON.stringify(doc));\n        }\n      }\n      // make sure the items appear in the select dialog:\n      this.ref.detectChanges();\n      this.select_example.open(new MouseEvent(\"click\"));\n    }).catch(err => {\n      this.parent.G.L.error(\"DraftpollPage.use_example_clicked failed\", err);\n    });\n  }\n\n  use_example() { \n    var spec = this.select_example.value;\n    if ((spec||'-')!='-') {\n      this.parent.restart_with_data(spec); \n      this.popover.dismiss();\n    }\n  }\n\n}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DraftpollKebapPage } from './draftpoll-kebap.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DraftpollKebapPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DraftpollKebapPageRoutingModule {}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DraftpollKebapPageRoutingModule } from './draftpoll-kebap-routing.module';\n\nimport { DraftpollKebapPage } from './draftpoll-kebap.page';\nexport { DraftpollKebapPage } from './draftpoll-kebap.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DraftpollKebapPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [DraftpollKebapPage],\n  exports: [DraftpollKebapPage]\n})\nexport class DraftpollKebapPageModule {}\n","<!--\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<form [formGroup]=\"selectServerFormGroup\">\n  <ion-item>\n    <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"(page=='settings'?'settings.db-label':'draftpoll.db-label')|translate\"></ion-label>\n    <ion-select formControlName=\"db\" [cancelText]=\"'cancel'|translate\" [okText]=\"'OK'|translate\" \n        [style]=\"page!='settings'?'font-size: smaller;':''\"\n        (ionChange)=\"set_db()\">\n      <ion-select-option *ngIf=\"page!='settings'\" value=\"default\" [innerHtml]=\"'select-server.same-as-personal'|translate\"></ion-select-option>\n      <ion-select-option value=\"central\" [innerHtml]=\"'select-server.central'|translate\"></ion-select-option>\n      <ion-select-option value=\"poll\" [innerHtml]=\"(page=='settings'?'select-server.same-as-some-poll':'select-server.same-as-other-poll')|translate\"></ion-select-option>\n      <ion-select-option value=\"other\" [innerHtml]=\"'select-server.other'|translate\"></ion-select-option>\n    </ion-select>\n  </ion-item>\n  <ng-container *ngIf=\"selectServerFormGroup.get('db').value=='poll'\">\n    <ion-item>\n      <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"(page=='settings'?'select-server.which-poll':'select-server.which-other-poll')|translate\"></ion-label>\n      <ion-select formControlName=\"db_from_pid\" \n          [cancelText]=\"'cancel'|translate\" [okText]=\"'OK'|translate\" \n          style=\"font-size: smaller;\"\n          (ionChange)=\"set_db_from_pid()\">\n        <ng-container *ngFor=\"let pid of Object.keys(G.P.polls)\">\n          <ion-select-option *ngIf=\"pid!=page_object.p.pid\" [value]=\"pid\" [innerHtml]=\"G.P.polls[pid].title\"></ion-select-option>\n        </ng-container>\n      </ion-select>\n    </ion-item>\n  </ng-container>    \n  <ng-container *ngIf=\"selectServerFormGroup.get('db').value=='other'\">\n    <ion-item>\n      <small [innerHtml]=\"'select-server.please-enter-couchdb'|translate\"></small>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'db-server-url'|translate\"></ion-label>\n      <ion-input \n        style=\"font-size: smaller;\" type=\"text\" [maxlength]=\"E.max_len.url\"\n        formControlName=\"db_custom_server_url\" required\n        (ionChange)=\"set_db_custom_server_url()\" debounce=\"100\">\n      </ion-input>\n    </ion-item>\n    <div class=\"validation-errors\">\n      <ng-container *ngFor=\"let validation of validation_messages.db_custom_server_url\">\n        <div class=\"error-message\" *ngIf=\"selectServerFormGroup.get('db_custom_server_url').hasError(validation.type) \n            && (selectServerFormGroup.get('db_custom_server_url').dirty || selectServerFormGroup.get('db_custom_server_url').touched)\" [innerHtml]=\"validation.message|translate\"></div>\n      </ng-container>\n    </div>\n    <ion-item>\n      <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'db-pw'|translate\"></ion-label>\n      <ion-input \n        style=\"font-size: smaller;\" \n        [type]=\"showing_db_custom_password?'text':'password'\" [maxlength]=\"E.max_len.name\"\n        formControlName=\"db_custom_password\" required\n        clearOnEdit=\"false\" clearInput=\"true\"\n        (keydown.enter)=\"showing_db_custom_password=selectServerFormGroup.get('db_custom_password').valid?false:showing_db_custom_password;blur()\"\n        (keydown.tab)=\"showing_db_custom_password=selectServerFormGroup.get('db_custom_password').valid?false:showing_db_custom_password;blur()\"\n        (ionChange)=\"set_db_custom_password()\" debounce=\"100\">\n      </ion-input>\n      <ion-button slot=\"end\" style=\"padding-top: 10px;\" fill=\"clear\" color=\"primary\" (click)=\"showing_db_custom_password=!showing_db_custom_password\">\n        <ion-icon tabindex=\"-1\" [name]=\"showing_db_custom_password?'eye-off-outline':'eye-outline'\"></ion-icon>&nbsp;<span [innerHtml]=\"(showing_db_custom_password?'hide':'show')|translate\"></span>\n      </ion-button>      \n    </ion-item>\n    <div class=\"validation-errors\">\n      <ng-container *ngFor=\"let validation of validation_messages.db_custom_password\">\n        <div class=\"error-message\" *ngIf=\"selectServerFormGroup.get('db_custom_password').hasError(validation.type) \n            && (selectServerFormGroup.get('db_custom_password').dirty || selectServerFormGroup.get('db_custom_password').touched)\" [innerHtml]=\"validation.message|translate\"></div>\n      </ng-container>\n    </div>\n  </ng-container>\n</form>","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\n\nimport { GlobalService } from \"../../global.service\";\n\n@Component({\n  selector: 'app-select-server',\n  templateUrl: './select-server.component.html',\n  styleUrls: ['./select-server.component.scss'],\n})\nexport class SelectServerComponent implements OnInit {\n\n  E = environment;\n  Object = Object;\n\n  showing_db_custom_password: boolean;\n\n  @Input() page: string; // the name of that page provided in its template\n  @Input() page_object; // the name of that page provided in its template\n\n  selectServerFormGroup: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public G: GlobalService,\n  ) { }\n\n  ngOnInit() {\n    this.G.L.entry(\"SelectServerComponent.ngOnInit\");\n    this.selectServerFormGroup = this.formBuilder.group({\n      db: new FormControl(this.page=='settings'?'central':'default', Validators.required),\n      db_from_pid: new FormControl('TODO', Validators.required),\n      db_custom_server_url: new FormControl('', Validators.pattern(this.G.urlRegex)),\n      db_custom_password: new FormControl('', Validators.required), // TODO: validator?\n    });\n    this.showing_db_custom_password = false;\n    if (this.page_object) {\n      this.page_object.onSelectServerReady(this);\n    }\n  }\n\n  validation_messages = {\n    'db_custom_server_url': [\n      { type: 'required', message: 'validation.db-server-url-required' },\n      { type: 'pattern', message: 'validation.db-server-url-pattern' }\n    ],\n    'db_custom_password': [\n      { type: 'required', message: 'validation.db-pw-required' }\n    ],\n  }\n\n  blur() {\n    // TODO: remove focus from any input element and optionally set it on parent component's next element\n  }\n  \n  set_db() {\n    let c = this.selectServerFormGroup.get('db');\n    if (c.valid && (c.value!='') && c.value) {\n      this.page_object.set_db(c.value);\n    }\n  }\n  set_db_from_pid() {\n    let c = this.selectServerFormGroup.get('db_from_pid');\n    if (c.valid) this.page_object.set_db_from_pid(c.value);\n  }\n  set_db_custom_server_url() {\n    let c = this.selectServerFormGroup.get('db_custom_server_url');\n    if (c.valid) this.page_object.set_db_custom_server_url(c.value);\n  }\n  set_db_custom_password() {\n    let c = this.selectServerFormGroup.get('db_custom_password');\n    if (c.valid) this.page_object.set_db_custom_password(c.value);\n  }\n\n}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ExpandableComponent } from './expandable/expandable.component';\nimport { SelectServerComponent } from './select-server/select-server.component';\n\n@NgModule({\n  declarations: [ExpandableComponent, SelectServerComponent],\n  imports: [\n    CommonModule, \n    IonicModule, \n    FormsModule, \n    ReactiveFormsModule,\n    TranslateModule.forChild()\n  ],\n  exports: [ExpandableComponent, SelectServerComponent]\n})\nexport class SharedcomponentsModule { }\n","import { registerPlugin } from '@capacitor/core';\nconst Share = registerPlugin('Share', {\n    web: () => import('./web').then(m => new m.ShareWeb()),\n});\nexport * from './definitions';\nexport { Share };\n","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-34cb2743.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n  try {\n    if (untrustedString instanceof IonicSafeString) {\n      return untrustedString.value;\n    }\n    if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n      return untrustedString;\n    }\n    /**\n     * Create a document fragment\n     * separate from the main DOM,\n     * create a div to do our work in\n     */\n    const documentFragment = document.createDocumentFragment();\n    const workingDiv = document.createElement('div');\n    documentFragment.appendChild(workingDiv);\n    workingDiv.innerHTML = untrustedString;\n    /**\n     * Remove any elements\n     * that are blocked\n     */\n    blockedTags.forEach(blockedTag => {\n      const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n      for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n        const element = getElementsToRemove[elementIndex];\n        if (element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        else {\n          documentFragment.removeChild(element);\n        }\n        /**\n         * We still need to sanitize\n         * the children of this element\n         * as they are left behind\n         */\n        const childElements = getElementChildren(element);\n        /* tslint:disable-next-line */\n        for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n          sanitizeElement(childElements[childIndex]);\n        }\n      }\n    });\n    /**\n     * Go through remaining elements and remove\n     * non-allowed attribs\n     */\n    // IE does not support .children on document fragments, only .childNodes\n    const dfChildren = getElementChildren(documentFragment);\n    /* tslint:disable-next-line */\n    for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n      sanitizeElement(dfChildren[childIndex]);\n    }\n    // Append document fragment to div\n    const fragmentDiv = document.createElement('div');\n    fragmentDiv.appendChild(documentFragment);\n    // First child is always the div we did our work in\n    const getInnerDiv = fragmentDiv.querySelector('div');\n    return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n  }\n  catch (err) {\n    console.error(err);\n    return '';\n  }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n  // IE uses childNodes, so ignore nodes that are not elements\n  if (element.nodeType && element.nodeType !== 1) {\n    return;\n  }\n  for (let i = element.attributes.length - 1; i >= 0; i--) {\n    const attribute = element.attributes.item(i);\n    const attributeName = attribute.name;\n    // remove non-allowed attribs\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n      element.removeAttribute(attributeName);\n      continue;\n    }\n    // clean up any allowed attribs\n    // that attempt to do any JS funny-business\n    const attributeValue = attribute.value;\n    /* tslint:disable-next-line */\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n      element.removeAttribute(attributeName);\n    }\n  }\n  /**\n   * Sanitize any nested children\n   */\n  const childElements = getElementChildren(element);\n  /* tslint:disable-next-line */\n  for (let i = 0; i < childElements.length; i++) {\n    sanitizeElement(childElements[i]);\n  }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n  return (el.children != null) ? el.children : el.childNodes;\n};\nconst isSanitizerEnabled = () => {\n  const win = window;\n  const config = win && win.Ionic && win.Ionic.config;\n  if (config) {\n    if (config.get) {\n      return config.get('sanitizerEnabled', true);\n    }\n    else {\n      return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n    }\n  }\n  return true;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nclass IonicSafeString {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\nexport { IonicSafeString as I, sanitizeDOMString as s };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":"webpack:///","file":"common.9c9412d1233b109c.js"}