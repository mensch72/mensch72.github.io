{"version":3,"mappings":"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","names":["i0","ctx_r14","routes","path","component","constructor","G","translate","this","Object","window","Set","L","entry","ngOnInit","ready","ionViewWillEnter","D","page","onDataChange","ionViewDidEnter","onDataReady","news","N","filter","class","unanswered_requests","pid","P","polls","cache","incoming_dids_caches","did","from","url","status","includes","trace","push","ionViewWillLeave","exit","ionViewDidLeave","save_state","can_invite","p","creator","S","email","running_polls","values","state","sort","p1","p2","remaining_time_fraction","closed_polls","due","getTime","MypollsPage","selectors","MypollsPageRoutingModule","RouterModule","MypollsPageModule","CommonModule","FormsModule","IonicModule","TranslateModule"],"sources":["./src/app/mypolls/mypolls.page.html","./src/app/mypolls/mypolls-routing.module.ts","./src/app/mypolls/mypolls.page.ts","./src/app/mypolls/mypolls.module.ts"],"sourcesContent":["<!--\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<!--\nTODO:\n- after logging back in, we see wrong \"abstaining\" badges\n-->\n\n<ion-header>\n  <ion-toolbar style=\"padding-right:11px;\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title [innerHtml]=\"'mypolls.-page-title'|translate\"></ion-title>\n    <ion-buttons slot=\"end\">\n\n      <!-- OFFLINE SIGN -->\n      <ng-container *ngIf=\"!window.navigator.onLine\">\n        <ion-icon name=\"cloud-offline-outline\" color=\"grey\"\n          style=\"position: relative; bottom: -1px;\">\n        </ion-icon>\n        <ion-icon name=\"alert-outline\" color=\"grey\">\n        </ion-icon>\n      </ng-container> \n\n      <!-- SYNCING SIGN -->\n      <ion-icon *ngIf=\"G.show_spinner || !window.navigator.onLine\" name=\"swap-vertical-outline\" color=\"grey\" style=\"margin-right: 10px;\"></ion-icon>\n      <!--\n      <ion-spinner *ngIf=\"G.show_spinner || !window.navigator.onLine\" name=\"crescent\" color=\"grey\"></ion-spinner>\n      -->\n      <ion-thumbnail>\n        <ion-img src=\"./assets/topright_icon.png\" ></ion-img>\n      </ion-thumbnail>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<!--\n  TODO:\n    - make bg image align bottom of screen when too few polls to fill screen.\n-->\n\n<ion-content *ngIf=\"ready\">\n  <ion-list lines=\"full\" class=\"ion-no-margin ion-no-padding\">\n\n    <!-- NEWS -->\n\n    <ion-card *ngFor=\"let n of news\">\n      <ion-card-content class=\"ion-no-margin ion-no-padding\">\n        <ion-item lines=\"none\" class=\"ion-no-margin ion-no-padding item-text-wrap\" color=\"warning\">\n          &nbsp;&nbsp;\n          <ion-label class=\"ion-no-margin ion-no-padding\">\n            {{n.title}}\n            <small *ngIf=\"n.body\">\n              <br/>\n              {{n.body}}\n            </small>  \n          </ion-label>\n          <ion-button *ngIf=\"n.pid\" class=\"ion-no-margin\" fill=\"clear\" size=\"small\" [routerLink]=\"'/poll/'+n.pid\"  style=\"color:var(--ion-color-warning-contrast)!important\">\n            <ion-icon name=\"arrow-forward-outline\" size=\"small\"></ion-icon>&nbsp;<span [innerHtml]=\"'go-to-poll'|translate\"></span>\n          </ion-button>\n          <ion-button slot=\"end\" class=\"ion-no-margin ion-no-padding\" fill=\"clear\" size=\"small\" (click)=\"news.delete(n);G.N.dismiss(n.key)\">\n            <ion-icon slot=\"icon-only\" name=\"close-outline\" style=\"color:gray!important\">\n            </ion-icon>    \n          </ion-button>  \n        </ion-item>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- UNANSWERED REQUESTS -->\n\n    <ng-container *ngIf=\"unanswered_requests.length > 0\">\n      <ion-item color=\"primary\">\n        <ion-label><b [innerHtml]=\"'mypolls.please-respond'|translate\"></b></ion-label>\n      </ion-item>\n      <ng-container *ngFor=\"let r of unanswered_requests\">\n        <ion-item>\n          <ion-label [routerLink]=\"r.url\" style=\"cursor: pointer;\">\n            <ion-icon class=\"poll-type-list\" size=\"small\" name=\"mail-open-outline\"></ion-icon>&nbsp;\n            <span [innerHtml]=\"'mypolls.request-by'|translate:{from:r.from}\"></span>\n          </ion-label>\n          <ion-buttons slot=\"end\" class=\"ion-no-padding ion-no-margin\">\n            <ion-badge *ngIf=\"r.status=='can-accept'\" class=\"ion-no-margin\" style=\"margin-left:5px; font-size: x-small;\" color=\"primary\" [innerHtml]=\"'badges.can-accept'|translate\"></ion-badge>\n            <ion-badge *ngIf=\"(r.status=='two-way')||(r.status=='cycle')\" class=\"ion-no-margin\" style=\"margin-left:5px; font-size: x-small;\" color=\"secondary\" [innerHtml]=\"'badges.please-check'|translate\"></ion-badge>\n          </ion-buttons>\n        </ion-item>\n      </ng-container>\n      <ng-container *ngIf=\"Object.keys(G.P.running_polls).length==0 && !G.show_spinner\">\n        <ion-item><p [innerHtml] =\"'mypolls.no-running-polls'|translate\"></p></ion-item>\n      </ng-container>  \n    </ng-container>\n\n    <!--RUNNING-->\n\n    <ion-item color=\"primary\" class=\"ion-no-margin\">\n      <ion-label><b [innerHtml]=\"'mypolls.running'|translate\"></b></ion-label>\n    </ion-item>\n    <ng-container *ngFor=\"let p of running_polls\">\n      <ion-item>\n        <ion-label [routerLink]=\"'/poll/'+p.pid\" style=\"cursor: pointer;\">\n          <!--<ion-icon *ngIf=\"p.type=='share'\" class=\"poll-type-list\" size=\"small\" src=\"./assets/icon/flowers.svg\"></ion-icon>-->\n          <ion-icon class=\"poll-type-list\" size=\"small\" [name]=\"(p.type=='share')?'cut':'trophy'\"></ion-icon>&nbsp;\n          <i [innerHtml]=\"p.title\"></i>\n        </ion-label>\n        <ion-buttons slot=\"end\" class=\"ion-no-padding ion-no-margin\" style=\"position: relative; right: -10px;\">\n\n          <!-- Badges: -->\n\n          <div style=\"display: flex; flex-direction: column;\">\n            <div *ngIf=\"!p.have_seen\" style=\"display: flex;flex-direction: row-reverse;\">\n              <ion-badge class=\"ion-no-margin\" style=\"margin-left:5px; margin-bottom:1px; margin-top:1px; font-size: x-small;\" color=\"warning\" [innerHtml]=\"'badges.new'|translate\"></ion-badge>\n            </div>\n            <div *ngIf=\"p.is_closing_soon\" style=\"display: flex;flex-direction: row-reverse;\">\n              <ion-badge size=\"small\" class=\"ion-no-margin\" style=\"margin-left:5px; margin-bottom:1px; margin-top:1px; font-size: x-small;\" color=\"danger\" [innerHtml]=\"'badges.closing-soon'|translate\"></ion-badge>\n            </div>\n            <div *ngIf=\"p.have_seen && p.am_abstaining\" style=\"display: flex;flex-direction: row-reverse;\">\n              <ion-badge class=\"ion-no-margin\" style=\"margin-left:5px; margin-bottom:1px; margin-top:1px; font-size: x-small;\" color=\"danger\" slot=\"end\" [innerHtml]=\"'badges.abstaining' | translate\"></ion-badge>\n            </div>\n            <div *ngIf=\"p.have_delegated\" style=\"display: flex;flex-direction: row-reverse;\">\n              <ion-badge class=\"ion-no-margin\" style=\"margin-left:5px; margin-bottom:1px; margin-top:1px; font-size: x-small;\" color=\"secondary\" slot=\"end\" [innerHtml]=\"'badges.delegated' | translate\"></ion-badge>\n            </div>\n          </div>\n\n          <!-- Invite-to button: -->\n\n          <ion-button *ngIf=\"can_invite(p)\" fill=\"clear\" \n              class=\"ion-no-padding ion-no-margin\"\n              [routerLink]=\"'/inviteto/'+p.pid\">\n            <ion-icon name=\"share-social-outline\" slot=\"icon-only\" color=\"primary\"></ion-icon>\n          </ion-button>\n\n        </ion-buttons>\n      </ion-item>\n    </ng-container>\n    <ng-container *ngIf=\"Object.keys(G.P.running_polls).length==0 && !G.show_spinner\">\n      <ion-item>\n        <ion-col class=\"ion-no-padding ion-no-margin\">\n          <p [innerHtml] =\"'mypolls.no-running-polls-1'|translate\"></p>\n          <small><p [innerHtml] =\"'mypolls.no-running-polls-2'|translate\"></p></small>\n        </ion-col>\n      </ion-item>\n    </ng-container>\n\n    <!-- CLOSED: -->\n\n    <ion-item color=\"primary\" (click)=\"closed_expanded=!closed_expanded\" style=\"cursor: pointer;\">\n      <ion-icon size=\"small\" [name]=\"closed_expanded?'caret-down-outline':'caret-forward-outline'\"></ion-icon>\n      &nbsp;&nbsp;<ion-label [innerHtml]=\"'mypolls.recently-closed'|translate\"></ion-label>\n    </ion-item>\n    <ng-container *ngIf=\"closed_expanded\">\n      <ng-container *ngFor=\"let p of closed_polls\">\n        <ion-item [routerLink]=\"'/poll/'+p.pid\" style=\"cursor: pointer;\">\n          <ion-label>\n            <ion-icon class=\"poll-type-list\" size=\"small\" [name]=\"(p.type=='share')?'cut':'trophy'\"></ion-icon>&nbsp;\n            <i [innerHtml]=\"p.title\"></i>\n          </ion-label>\n          <ion-buttons slot=\"end\" class=\"ion-no-padding ion-no-margin\" style=\"position: relative; right: -10px;\">\n\n            <!-- Badges: -->\n  \n            <div style=\"display: flex; flex-direction: column;\">\n              <div *ngIf=\"!p.have_seen_results\" style=\"display: flex;flex-direction: row-reverse;\">\n                <ion-badge class=\"ion-no-margin\" style=\"margin-left:5px; margin-bottom:1px; margin-top:1px; font-size: x-small;\" color=\"warning\" [innerHtml]=\"'badges.new'|translate\"></ion-badge>\n              </div>\n            </div>\n  \n          </ion-buttons>\n        </ion-item>\n      </ng-container>\n      <ng-container *ngIf=\"Object.keys(G.P.closed_polls).length==0 && !G.show_spinner\">\n        <ion-item>\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n            <p [innerHtml] =\"'mypolls.no-recently-closed-polls-1'|translate\"></p>\n            <small><p [innerHtml] =\"'mypolls.no-recently-closed-polls-2'|translate\"></p></small>\n          </ion-col>\n        </ion-item>\n      </ng-container>\n    </ng-container>\n    <!--OLDER-->\n    <!--\n    <ion-item color=\"light\" (click)=\"older_expanded=!older_expanded\">\n      <ion-icon size=\"small\" [name]=\"older_expanded?'caret-down-outline':'caret-forward-outline'\"></ion-icon>\n      &nbsp;&nbsp;<ion-label [innerHtml]=\"'mypolls.older'|translate\"></ion-label>\n    </ion-item>\n    <ng-container *ngIf=\"older_expanded\">\n      <ng-container *ngFor=\"let p of Object.values(G.P.polls)\">\n        <ion-item *ngIf=\"p.state=='closed'\" [routerLink]=\"'/draftpoll/'+p.pid\">\n          <ion-icon size=\"small\" [name]=\"(p.type=='share')?'cut':'trophy'\"></ion-icon>&nbsp;\n          <small><i>{{p.title}}</i></small>\n          <ion-badge class=\"ion-no-margin\" style=\"margin-left:5px;\" color=\"primary\" slot=\"end\">New</ion-badge>\n        </ion-item>\n      </ng-container>\n    </ng-container>\n    -->\n\n    <!--DRAFTS:-->\n\n    <ion-item color=\"light\" (click)=\"drafts_expanded=!drafts_expanded\" style=\"cursor: pointer;\">\n      <ion-icon size=\"small\" [name]=\"drafts_expanded?'caret-down-outline':'caret-forward-outline'\"></ion-icon>\n      &nbsp;&nbsp;<ion-label [innerHtml]=\"'mypolls.drafts'|translate\"></ion-label>\n    </ion-item>\n    <ng-container *ngIf=\"drafts_expanded\">\n      <ng-container *ngFor=\"let p of Object.values(G.P.polls)\">\n        <ion-item *ngIf=\"p.state=='draft'\" [routerLink]=\"'/draftpoll/'+p.pid\" style=\"cursor: pointer;\">\n          <ion-label>\n            <ion-icon class=\"poll-type-list\" size=\"small\" [name]=\"(p.type=='share')?'cut':'trophy'\"></ion-icon>&nbsp;\n            <i [innerHtml]=\"p.title\"></i>\n          </ion-label>\n          <ion-buttons slot=\"end\" \n              style=\"position: relative; right: -10px;\"\n              class=\"ion-no-padding ion-no-margin\">\n            <ion-badge class=\"ion-no-margin\" style=\"margin-left:5px; font-size: x-small;\" color=\"light\" [innerHtml]=\"'badges.draft'|translate\"></ion-badge>\n            <ion-button fill=\"clear\">\n              <ion-icon name=\"pencil-outline\" slot=\"icon-only\"></ion-icon>\n            </ion-button>\n          </ion-buttons>\n        </ion-item>\n      </ng-container>\n      <ng-container *ngIf=\"Object.keys(G.P.draft_polls).length==0 && !G.show_spinner\">\n        <ion-item>\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n            <p [innerHtml] =\"'mypolls.no-draft-polls-1'|translate\"></p>\n            <small><p [innerHtml] =\"'mypolls.no-draft-polls-2'|translate\"></p></small>\n          </ion-col>\n        </ion-item>\n      </ng-container>\n    </ng-container>\n  </ion-list>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\" class=\"ion-margin\">\n    <ion-fab-button routerLink=\"/draftpoll\">\n      <ion-icon name=\"add\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n\n</ion-content>\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MypollsPage } from './mypolls.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MypollsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MypollsPageRoutingModule {}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { news_t } from '../data.service';\n\nimport { GlobalService } from \"../global.service\";\nimport { Poll } from \"../poll.service\";\n\n@Component({\n  selector: 'app-mypolls',\n  templateUrl: './mypolls.page.html',\n  styleUrls: ['./mypolls.page.scss'],\n})\nexport class MypollsPage implements OnInit {\n\n  Object = Object;\n  window = window;\n\n  news: Set<news_t> = new Set();\n\n  unanswered_requests = []; \n\n  closed_expanded = false;\n  drafts_expanded = false;\n  older_expanded = false;\n\n  // LIFECYCLE:\n\n  ready: boolean;\n\n  constructor(\n    public G: GlobalService,\n    public translate: TranslateService\n  ) { \n    this.G.L.entry(\"MypollsPage.constructor\");\n  }\n  \n  ngOnInit() {\n    this.G.L.entry(\"MypollsPage.ngOnInit\");\n    this.ready = false;\n  }\n\n  ionViewWillEnter() {\n    this.G.L.entry(\"MypollsPage.ionViewWillEnter\");\n    this.G.D.page = this;\n    if (this.ready) this.onDataChange();\n  }\n\n  ionViewDidEnter() {\n    this.G.L.entry(\"MypollsPage.ionViewDidEnter\", this.G.D.ready, this.ready);\n    if (this.G.D.ready && !this.ready) this.onDataReady();\n  }\n\n  onDataReady() {\n    // called when DataService initialization was slower than view initialization\n    this.G.L.entry(\"MypollsPage.onDataReady\");\n    this.onDataChange();\n    this.ready = true;\n  }\n\n  onDataChange() {\n    this.G.L.entry(\"MypollsPage.onDataChange\");\n    this.news = new Set([\n      ...this.G.N.filter({class: 'new_option'}),\n      ...this.G.N.filter({class: 'delegation_accepted'}),\n      ...this.G.N.filter({class: 'delegation_declined'}),\n      ...this.G.N.filter({class: 'poll_closed'})      \n    ]);\n    this.unanswered_requests = [];\n    for (const pid in this.G.P.polls) {\n      const cache = this.G.D.incoming_dids_caches[pid];\n      if (cache) {\n        for (let [did, [from, url, status]] of cache) {\n          if ([\"possible\",\"two-way\",\"cycle\"].includes(status)) {\n            this.G.L.trace(\"MypollsPage.onDataChange found unanswered request\", did, from, url, status);\n            this.unanswered_requests.push({pid:pid, did:did, from:from, url:url, status:status});\n          }\n        }  \n      }\n    }\n  }\n\n  ionViewWillLeave() {\n    this.G.L.entry(\"MypollsPage.ionViewWillLeave\");\n    this.G.L.exit(\"MypollsPage.ionViewWillLeave\");\n  }\n\n  ionViewDidLeave() {\n    this.G.L.entry(\"MypollsPage.ionViewDidLeave\");\n    this.G.D.save_state();\n    this.G.L.exit(\"MypollsPage.ionViewDidLeave\");\n  }\n\n  // user actions:\n\n  can_invite(p: Poll) {\n    // TODO: only author can invite? \n    return p.creator == this.G.S.email;\n  }\n\n  // helper methods:\n\n  get running_polls(): Poll[] {\n    // return polls sorted by what part of their time is left:\n    return Object.values(this.G.P.polls)\n      .filter((p) => p.state=='running')\n      .sort((p1, p2) => p1.remaining_time_fraction - p2.remaining_time_fraction);\n  } \n\n  get closed_polls(): Poll[] {\n    // return polls sorted by due:\n    return Object.values(this.G.P.polls)\n      .filter((p) => p.state=='closed')\n      .sort((p1, p2) => p2.due.getTime() - p1.due.getTime());\n  } \n\n}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MypollsPageRoutingModule } from './mypolls-routing.module';\n\nimport { MypollsPage } from './mypolls.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MypollsPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MypollsPage]\n})\nexport class MypollsPageModule {}\n"],"sourceRoot":"webpack:///","file":"7608.d50e721ae5b0ad87.js"}